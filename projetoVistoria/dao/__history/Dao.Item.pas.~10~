unit Dao.Item;

interface

uses
  System.Generics.Collections, DBXJSON, DBXJSONReflect, BD.Connection,
  FireDAC.Comp.Client, SysUtils, Item, FireDAC.Phys.Intf, FireDAC.DApt;
 type
  TItemDao = class
  private
    class function Create (AItem: TItem): TItem;
    class function Update (AItem: TItem): TItem;
    class procedure Consolidate (var AItem: TItem; AQuery : TFDQuery);
  public
    class function Read(): TObjectList<TItem>; overload;
    class function Read(AIdItem: Integer) : TItem; overload;
    class function Save(AItem : TItem): TItem;
    class procedure Delete (AIdItem: Integer);
  end;

implementation

{ TItemDao }

class procedure TItemDao.Consolidate(var AItem: TItem; AQuery: TFDQuery);
begin
  with AQuery do
  begin
    AItem.IdItem := FindField('iditem').AsInteger;
    AItem.Descricao := FindField('descricao').AsString;
  end;
end;

class function TItemDao.Create(AItem: TItem): TItem;
var
  Con : TFDConnection;
  QueryString : string;
  IdItem : Integer;
begin
  Con := TConnection.getConnection;

  QueryString := Format(
  'INSERT INTO aula.cadItem (descricao) VALUES ( ''%s'' ) RETURNING iditem',
  [AItem.Descricao]
  );

end;

class procedure TItemDao.Delete(AId: Integer);
var
  Con : TFDConnection;
  QueryString: string;
begin
  Con := TConnection.getConnection;
  QueryString := Format('DELETE FROM aula.caditem WHERE iditem = %d ',
  [AidItem]
  );

end;

class function TItemDao.Read(AIdItem: Integer): TItem;
var
  Query : TFDQuery;
  QueryString : string;
begin
  Result := TItem.Create;
  Query := TFDQuery.Create(nil);

  QueryString := Format('SELECT * FROM aula.caditem WHERE iditem = %d',
  [AIdItem]
  );
  with Query do
  begin
    Connection := TConnection.getConnection;
    Close;
    SQL.Clear;
    SQL.Add(QueryString);
    Open;

    if IsEmpty then
      Raise Exception.Create('Not Found');

    First;
    Consolidate(Result, Query);

  end;
end;

class function TItemDao.Read: TObjectList<TItem>;
var
  Query: TFDQuery;
  QueryString : string;
  Item : TItem;
begin
  Result := TObjectList<TItem>.Create;
  Query := TFDQuery.Create(nil);

  QueryString := 'SELECT * FROM aula.item';

  with Query do
  begin
    Connection := TConnection.getConnection;
    Close;
    SQL.Clear;
    SQL.Add(QueryString);
    Open;

    if isEmpty then
      raise Exception.Create('Not found');

    First;

    while not eof do
    begin
      Item := TItem.Create;
      Consolidate(Item, Query);
      Result.Add(Item);
      Next;
    end;
  end;

end;

class function TItemDao.Save(AItem: TItem): TItem;
begin
  if (AItem.IdItem = 0) then
  begin
    Exit(Create(AItem));
  end;
    Exit(Update(AItem));
end;

class function TItemDao.Update(AItem: TItem): TItem;
var
  Con : TFDConnection;
  QueryString: string;
begin
  Con := TConnection.Create;
  QueryString := Format(
  'UPDATE aula.caditem SET descricao = ''%s'' WHERE iditem = %d',
  [AItem.Descricao]);

  Con.ExecSQL(QueryString);
  Result := AItem;
end;

end.
